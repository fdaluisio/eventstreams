apiVersion: eventstreams.ibm.com/v1beta2
kind: EventStreams
metadata:
  annotations:
    eventstreams.ibm.com/apicurio-registry-version: '>=2.4.1'
  name: dev-scram
  namespace: myproject
  labels:
    backup.eventstreams.ibm.com/component: eventstreams
spec:
  adminApi: {}
  adminUI:
    authentication:
      - type: scram-sha-512
  apicurioRegistry: {}
  collector: {}
  license:
    accept: true
    license: L-HRZF-DWHH7A
    use: EventAutomationNonProduction
  restProducer: {}
  strimziOverrides:
    kafka:
      authorization:
        type: simple
      config:
        default.replication.factor: 3
        inter.broker.protocol.version: '3.6'
        log.cleaner.threads: 6
        min.insync.replicas: 2
        num.io.threads: 24
        num.network.threads: 9
        num.replica.fetchers: 3
        offsets.topic.replication.factor: 3
      listeners:
        - authentication:
            type: scram-sha-512
          name: external
          port: 9094
          tls: true
          type: route
        - authentication:
            type: tls
          name: tls
          port: 9093
          tls: true
          type: internal
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: kafka-metrics-config.yaml
            name: development-metrics-config
      replicas: 3
      storage:
        type: ephemeral
    zookeeper:
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: zookeeper-metrics-config.yaml
            name: development-metrics-config
      replicas: 3
      storage:
        type: ephemeral
  version: latest
